openapi: 3.0.3
info:
  title: Resful API example
  description: |-
    A simple invest API that allows two operations:
    - get account balance given account number
    - deposit amount to a account 
  version: 2.0-SNAPSHOT
  contact:
    name: Pedro Miguel Rodriguez

servers:
  - url: https://testenvironment.org/api/v1
  - url: https://prodenvironment.org/api/v1

tags:
  - name: Investors
    description: Operations to manage investors
  - name: Stocks
    description: Operations to manage stocks
  - name: Trading
    description: Trading operations
    
paths:
  /api/invest/v1/investors:
    post:
      tags:
        - Investors
      summary: Create investor
      description: | 
        This endpoint permits creating an investor
        
        ```Roles: USER or ADMIN```
      operationId: createInvestor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalServerError'
    get:
      deprecated: true
      tags:
        - Investors
      summary: Get all investors information
      description: | 
        This endpoint permits get all investors information
        
        ```Roles: ADMIN```
      operationId: getInvestors
      responses:
        308:
          $ref: '#/components/responses/PermanentRedirect'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'

  /api/invest/v1/investors/{investorId}:
    get:
      tags:
        - Investors
      summary: Get investor information
      description: | 
        This endpoint permits get investor information using investor identification
        
        ```Roles: USER or ADMIN```
      operationId: getInvestorById
      parameters:
        - $ref: '#/components/parameters/InvestorIdParam'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvestorResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Investors
      summary: Update an investor
      description: | 
        This endpoint permits update an investor
        
        ```Roles: USER or ADMIN```
      operationId: updateInvestor
      parameters:
        - $ref: '#/components/parameters/InvestorIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorRequest'
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Investors
      summary: Delete an investor
      description: | 
        This endpoint permits delete an investor
        
        ```Roles: USER or ADMIN```
      operationId: deleteInvestor
      parameters:
        - $ref: '#/components/parameters/InvestorIdParam'
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/invest/v2/investors:
    get:
      tags:
        - Investors
      summary: Get all investors information by page
      description: | 
        This endpoint permits get all investors information
        
        ```Roles: ADMIN```
      operationId: getInvestorsV2
      parameters:
        - $ref: '#/components/parameters/PageableOffsetParam'
        - $ref: '#/components/parameters/PageableLimitParam'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorResponsePage'
        206:
          description: Partial content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorResponsePage'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        406:
          $ref: '#/components/responses/NotAcceptable'
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/invest/v1/stocks:
    post:
      tags:
        - Stocks
      summary: Create stocks
      description: | 
        This endpoint permits creating a stock
        
        ```Roles: ADMIN```
      operationId: createStock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Stocks
      summary: Get all stocks information
      description: | 
        This endpoint permits get all stocks information
        
        ```Roles: USER or ADMIN```
      operationId: getStocks
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        406:
          $ref: '#/components/responses/NotAcceptable'
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/invest/v1/stocks/{isin}:
    patch:
      tags:
        - Stocks
      summary: Update a stock
      description: | 
        This endpoint permits update a stock
        
        ```Roles: ADMIN```
      operationId: updateStock
      parameters:
        - $ref: '#/components/parameters/IsinParam'
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchRequest'
      responses:
        200:
          description: Changes applied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    InvestorRequest:
      description: Investor request
      type: object
      additionalProperties: false
      required:
        - idNumber
        - name
        - age
        - country
      properties:
        idNumber:
          description: Investor identification number 
          type: string
          maxLength: 20
          example: '76245691H'
        name:
          description: Investor name
          type: string
          maxLength: 100
          example: 'Manuel Rodriguez'
        age:
          description: Investor age 
          type: integer
          max: 99
          min: 18
          example: '37'
        country:
          description: Investor country
          type: string
          example: 'SPAIN'

    InvestorResponse:
      description: Investor response
      type: object
      properties:
        id:
          description: Investor identifier
          type: number
          example: '123456'
        idNumber:
          description: Investor identification number 
          type: string
          maxLength: 20
          example: '76245691H'
        name:
          description: Investor name
          type: string
          maxLength: 100
          example: 'Manuel Rodriguez'
        age:
          description: Investor age 
          type: integer
          max: 99
          min: 18
          example: '37'
        country:
          description: Investor country
          type: string
          example: 'SPAIN'
        _links:
          description: HATEOAS links
          type: object
          additionalProperties:
            type: string

    InvestorResponsePage:
      type: object
      properties:
        data:
          description: Set of data
          type: array
          items:
            $ref: '#/components/schemas/InvestorResponse'
        pagination:
          $ref: '#/components/schemas/PaginationLinks'
    
    StockRequest:
      description: Stock request
      type: object
      additionalProperties: false
      required:
        - isin
        - corporationName
        - market
        - currency
      properties:
        isin:
          description: International Securities Identification Number
          type: string
          maxLength: 12
          example: 'ES0105611000'
        corporationName:
          description: Corporation name
          type: string
          maxLength: 100
          example: 'Singular People'
        market:
          description: Market 
          type: string
          maxLength: 3
          example: 'MAD'
        currency:
          description: Currency
          type: string
          example: 'EUR'
    
    StockResponse:
      description: Stock response
      type: object
      properties:
        isin:
          description: International Securities Identification Number
          type: string
          maxLength: 12
          example: 'ES0105611000'
        corporationName:
          description: Corporation name
          type: string
          maxLength: 100
          example: 'Singular People'
        market:
          description: Market 
          type: string
          maxLength: 3
          example: 'MAD'
        currency:
          description: Currency
          type: string
          example: 'EUR'
        _links:
          description: HATEOAS links
          type: object
          additionalProperties:
            type: string
    
    JsonPatchRequest:
      description: Json patch request
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/JsonPatchOperation'
    
    JsonPatchOperation:
      description: Json patch operation
      type: object
      properties:
        op:
          description: Operation
          type: string
          example: 'replace'
        path:
          description: resource path
          type: string
          example: '/currency'
        value:
          description: value
          type: string
          example: 'USD'
    
    PaginationLinks:
      type: object
      properties:
        offset:
          description: Offset
          type: integer
          example: '0'
        limit:
          description: Limit
          type: integer
          example: '10'
        total:
          description: Total
          type: integer
          example: '100'
        links:
          $ref: '#/components/schemas/Links'
          
    Links:
      description: HATEOAS links
      type: object
      properties:
        self:
          type: string
        prev:
          type: string
        next:
          type: string
        first:
          type: string
          
    Error:
      type: object
      properties:
        code:
          type: integer
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 404
        message:
          type: string
          maxLength: 500
          description: A short summary of the problem
          example: Investor not found

  parameters:
    InvestorIdParam:
      in: path
      name: investorId
      required: true
      description: Investor identifier
      schema:
        type: integer
        format: int64
      example: '123456'
    
    IsinParam:
      in: path
      name: isin
      required: true
      description: International Securities Identification Number
      schema:
        type: string
      example: 'ES0105611000'

    PageableOffsetParam:
      in: query
      name: offset
      required: false
      description: Pageable offset
      schema:
        type: integer
        format: int64
      example: '0'
        
    PageableLimitParam:
      in: query
      name: limit
      required: false
      description: Pageable limit
      schema:
        type: integer
      example: '50'

  responses:
    NoContent:
      description: No content
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Bad Request
            code: 400
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Unauthorized
            code: 401
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Forbidden
            code: 403
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Resource not found
            code: 404
    NotAcceptable:
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Format not acceptable
            code: 406
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: InternalServerError
            code: 500
    PermanentRedirect:
      description: PermanentRedirect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: PermanentRedirect
            code: 308